#!/usr/bin/env php
<?php

/**
 * Basecamp API Wrapper for PHP 5.3+ 
 *
 * LICENSE
 *
 * This source file is subject to the MIT license that is bundled
 * with this package in the file LICENSE.txt
 *
 * @category   Sirprize
 * @package    Basecamp
 * @subpackage Try
 * @copyright  Copyright (c) 2010, Christian Hoegl, Switzerland (http://sirprize.me)
 * @license    MIT License
 */

require_once '../_config.php';

require_once 'Sirprize/Basecamp.php';
$basecamp = new \Sirprize\Basecamp($config);

require_once 'Sirprize/Basecamp/TodoList/Collection/Observer/Stout.php';
$collectionObserverStout = new \Sirprize\Basecamp\TodoList\Collection\Observer\Stout();

require_once 'Sirprize/Basecamp/TodoList/Collection/Observer/Log.php';
$collectionObserverLog = new \Sirprize\Basecamp\TodoList\Collection\Observer\Log();
$collectionObserverLog->setLog($log);

require_once 'Sirprize/Basecamp/TodoList/Entity/Observer/Stout.php';
$entityObserverStout = new \Sirprize\Basecamp\TodoList\Entity\Observer\Stout();

require_once 'Sirprize/Basecamp/TodoList/Entity/Observer/Log.php';
$entityObserverLog = new \Sirprize\Basecamp\TodoList\Entity\Observer\Log();
$entityObserverLog->setLog($log);

require_once 'Sirprize/Basecamp/Id.php';
$projectId = new \Sirprize\Basecamp\Id(BASECAMP_EXAMPLE_PROJECT_ID);

$todoLists = $basecamp->getTodoListCollectionInstance();
$todoLists->attachObserver($collectionObserverStout);
$todoLists->attachObserver($collectionObserverLog);
$todoLists->startAllByProjectId($projectId);


if($todoLists->getResponse()->isError())
{
	die("Error\n");
}

foreach($todoLists as $todoList)
{
	try {
		$todoList->attachObserver($entityObserverStout);
		$todoList->attachObserver($entityObserverLog);
		
		if($todoList->getName() != '@ Inventar')
		{
			$todoList->delete();
			
			if($todoList->getResponse()->isError())
			{
				continue;
			}
		}
	}
	catch(Exception $exception)
	{
		print $exception->getMessage()."\n";
		continue;
	}
}